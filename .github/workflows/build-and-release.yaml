name: Build and Release
on: [push]
env:
  BINARY_ARCHIVE_LINUX: imf_${{ github.ref }}_linux.zip
  BINARY_ARCHIVE_WIN: imf_${{ github.ref }}_win.zip
  STATIC_LIB_ARCHIVE_LINUX: image-filters_${{ github.ref }}_linux.zip
  STATIC_LIB_ARCHIVE_WIN: image-filters_${{ github.ref }}_win.zip
jobs:
  build-linux:
    name: Build (Linux)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install OpenCV
        run: ./install-opencv.sh

      - name: Build imf
        run: make

      - name: Prepare binary archive
        run: |
          zip -j "$BINARY_ARCHIVE_LINUX" bin/linux/imf

      - name: Prepare static lib archive
        run: |
          zip -r "$STATIC_LIB_ARCHIVE_LINUX" include
          ln lib/linux/image-filters.a lib/image-filters.a
          zip -u "$STATIC_LIB_ARCHIVE_LINUX" lib/linux/image-filters.a

      - name: Store archives
        uses: actions/upload-artifact@v4
        with:
          name: archives-linux
          path: |
            ${{ env.BINARY_ARCHIVE_LINUX }}
            ${{ env.STATIC_LIB_ARCHIVE_LINUX }}

  build-win:
    name: Build (Windows)
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install OpenCV
        shell: cmd
        run: install-opencv.bat

      - name: Add MSBuild to PATH
        uses: microsoft/setup-msbuild@v2

      - name: Build imf.exe
        shell: cmd
        run: msbuild build\image-filters.sln -t:Rebuild -p:Configuration=Release
      
      - name: Store binaries
        uses: actions/upload-artifact@v4
        with:
          name: imf-win
          path: bin/win/release/imf.exe

      - name: Prepare binary archive
        shell: cmd
        run: |
          7z a "$BINARY_ARCHIVE_WIN" bin\win\release\imf.exe
          7z rn "$BINARY_ARCHIVE_WIN" bin\win\release\imf.exe imf.exe

      - name: Prepare static lib archive
        shell: cmd
        run: |
          7z a "$STATIC_LIB_ARCHIVE_WIN" include
          7z a "$STATIC_LIB_ARCHIVE_WIN" lib\win\release\image-filters.lib
          7z rn "$STATIC_LIB_ARCHIVE_WIN" lib\win\release\image-filters.lib lib\image-filters.lib

      - name: Store archives
        uses: actions/upload-artifact@v4
        with:
          name: archives-win
          path: |
            ${{ env.BINARY_ARCHIVE_WIN }}
            ${{ env.STATIC_LIB_ARCHIVE_WIN }}

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [build-linux, build-win]
    steps:
      - name: Retrieve archives
        uses: actions/download-artifact@v4
